<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.umeng.ufp.core.domain.Ad">
  <resultMap id="Ad-RESULT" type="com.umeng.ufp.core.domain.Ad">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column = "user_id" jdbcType="INTEGER" property="userId" />
    
    <result column="app_id" jdbcType="INTEGER" property="appId" />
    <result column="ad_order_id" jdbcType="INTEGER" property="adOrderId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="budget" jdbcType="VARCHAR" property="budget" />
    <result column="budget_limit" jdbcType="DOUBLE" property="budgetLimit" />
    <result column="cost_price" jdbcType="DOUBLE" property="costPrice" />
    <result column="price_type" jdbcType="VARCHAR" property="priceType" />
    
    <result column="networks" jdbcType="VARCHAR" property="networks" />
    <result column="channels" jdbcType="VARCHAR" property="channels" />

    <result column="size" jdbcType="VARCHAR" property="size" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="platform" jdbcType="VARCHAR" property="platform" />

    <result column="prior" jdbcType="INTEGER" property="prior" />

    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    
    <result column="device" jdbcType="VARCHAR" property="device" />
    <result column="areas" jdbcType="VARCHAR" property="areas" />
    <result column="keywords" jdbcType="VARCHAR" property="keywords" />
    <result column="landing_size" jdbcType="VARCHAR" property="landingSize" />
    
    <result column="timeslots" jdbcType="VARCHAR" property="timeslots" />
    
	<result column="state" jdbcType="INTEGER" property="state" />
    <result column="fixed_rank" jdbcType="INTEGER" property="fixedRank" />
  </resultMap>

  
	<sql id="select">
		select *
		from
		ad
	</sql>

	<select id="Ad.get" resultMap="Ad-RESULT" parameterType="int">
		<include refid="select" />
		<where>
		   id=#{id}
		</where> 
	</select>
	<select id="Ad.getMapById" resultType="java.util.HashMap" parameterType="int">
		<include refid="select" />
		where id=#{id}
	</select>
  
	<select id="Ad.find" resultMap="Ad-RESULT" parameterType="java.util.Map">
        <include refid="select" />
        <where>
			<!-- !(state & 1( means that not delete -->
        	<![CDATA[!(state & 1)]]>
            <if test="id != null and id != ''">
                  id = #{id}
            </if>
            <if test="userId != null and userId != ''">
		      user_id = #{userId}
		   </if>
        </where>    
    </select>
	
	<select id="Ad.listQueryPage" resultType="java.util.HashMap" parameterType="java.util.Map">
		select id, ad_order_id, name, start_time, end_time, platform, areas, networks, channels, budget, 
			budget_limit, price_type, cost_price, prior, state, fixed_rank,
			(select content_type from ad_content where ad_content.id = ad.id) as content_type,
			(select name from ad_order where ad_order.id = ad.ad_order_id) as ad_order_name
		from ad
		<where>
			<!-- !(state & 1( means that not delete -->
        	<![CDATA[!(state & 1)]]>
			<if test="status != null and status != ''">
		         and
				 <foreach item="s" collection="status" open="(" close=")"
		             separator=" or ">
		             <!-- state & (state -1 ) means set lowest bit from 1 to 0 -->
				     <!-- state ^ (state & (state -1 )) means get proir highest state -->
		             <choose>
			             <when test="s == 'normal'">
			             	state = 0
			             </when>
			             <when test="s == 'pause'">
				             <![CDATA[((state ^ (state & (state - 1))) & 2)]]>
			             </when>
			             <when test="s == 'limit'">
				             <![CDATA[((state ^ (state & (state - 1))) & 8)]]>
			             </when>
			             <when test="s == 'adorder_pause'">
				             <![CDATA[((state ^ (state & (state - 1))) & 32)]]>
			             </when>
			             <when test="s == 'adorder_finish'">
				             <![CDATA[((state ^ (state & (state - 1))) & 128)]]>
			             </when>
			             <when test="s == 'finish'">
				             <![CDATA[((state ^ (state & (state - 1))) & 256)]]>
			             </when>
			             <when test="s == 'adorder_ready'">
				             <![CDATA[((state ^ (state & (state - 1))) & 512)]]>
			             </when>
			             <when test="s == 'ready'">
				             <![CDATA[((state ^ (state & (state - 1))) & 1024)]]>
			             </when>
		             </choose>
		        </foreach>      
		    </if>
			<if test="adId != null and adId != ''">
				and ad.id = #{adId}
			</if>
	        <if test="adOrderId != null and adOrderId != ''">
	         	and ad.ad_order_id = #{adOrderId}
	        </if>
	        <if test="userId != null and userId != ''">
            	and ad.user_id = #{userId}
            </if>
            <if test="platform != null and platform != ''">
            	and ad.platform = #{platform}
            </if>
		</where>
		order by id desc
	     <if test="limit != null and limit !=''">
		     limit
		     <if test="offset != null and offset !=''">
		         #{offset},
		     </if>
		     #{limit}
		 </if>
	</select>

	<select id="Ad.listQueryPagecount" resultType="java.lang.Integer" parameterType="java.util.Map">
   		<![CDATA[
        select count(id)
        from ad
        ]]>
        <where>
			<!-- !(state & 1( means that not delete -->
        	<![CDATA[!(state & 1)]]>
            <if test="userId != null and userId != ''">
            	and user_id = #{userId}
            </if>  
            <if test="adOrderId != null and adOrderId != ''">
            	and ad_order_id = #{adOrderId}
            </if>
            <if test="status != null and status != ''">
		         and
				 <foreach item="s" collection="status" open="(" close=")"
		             separator=" or ">
		             <!-- state & (state -1 ) means set lowest bit from 1 to 0 -->
				     <!-- state ^ (state & (state -1 )) means get proir highest state -->
		             <choose>
			             <when test="s == 'normal'">
			             	state = 0
			             </when>
			             <when test="s == 'pause'">
				             <![CDATA[((state ^ (state & (state - 1))) & 2)]]>
			             </when>
			             <when test="s == 'limit'">
				             <![CDATA[((state ^ (state & (state - 1))) & 8)]]>
			             </when>
			             <when test="s == 'adorder_pause'">
				             <![CDATA[((state ^ (state & (state - 1))) & 32)]]>
			             </when>
			             <when test="s == 'adorder_finish'">
				             <![CDATA[((state ^ (state & (state - 1))) & 128)]]>
			             </when>
			             <when test="s == 'finish'">
				             <![CDATA[((state ^ (state & (state - 1))) & 256)]]>
			             </when>
			             <when test="s == 'adorder_ready'">
				             <![CDATA[((state ^ (state & (state - 1))) & 512)]]>
			             </when>
			             <when test="s == 'ready'">
				             <![CDATA[((state ^ (state & (state - 1))) & 1024)]]>
			             </when>
		             </choose>
		        </foreach>      
		    </if>
	        <if test="adIdList != null and adIdList != ''">
                and ad.id in
                <foreach item="adid" collection="adIdList" open="(" close=")"
                    separator=",">
                    #{adid}
                </foreach>
            </if>
            <if test="platform != null and platform != ''">
            	and ad.platform = #{platform}
            </if>
        </where>
        
	</select>
  
	<insert id="Ad.insert" parameterType="com.umeng.ufp.core.domain.Ad" useGeneratedKeys="true" keyProperty="id">
	    insert into ad(user_id, created_time, updated_time, name, 
	    	<if test="platform != null and platform != ''">platform</if>
	    	,ad_order_id, networks, areas, channels
	    	<if test="fixedRank != null">,fixed_rank</if>
	    	<if test="budget != null and budget != ''">,budget</if>
	    	,budget_limit, price_type, cost_price, start_time, end_time
	    ) values(#{userId}, SYSDATE(), SYSDATE(), #{name}
	        <if test="platform != null and platform != ''">,#{platform}</if>
	        ,#{adOrderId}, #{networks}, #{areas}, #{channels}
	        <if test="fixedRank != null">,#{fixedRank}</if>
	        <if test="budget != null and budget != ''">,#{budget}</if>
	        ,#{budgetLimit}, #{priceType}, #{costPrice}, #{startTime},#{endTime}
	    )
	</insert>
	<update id="Ad.update" parameterType="com.umeng.ufp.core.domain.Ad">
	    update ad set updated_time = SYSDATE(), name = #{name}
	    ,ad_order_id= #{adOrderId}, networks= #{networks}, channels= #{channels}
	    ,fixed_rank= #{fixedRank}
	    <if test="budget != null and budget != ''">,budget= #{budget}</if>
	    ,budget_limit= #{budgetLimit}, areas = #{areas}, price_type= #{priceType}
	    ,cost_price= #{costPrice}, start_time= #{startTime}, end_time= #{endTime}
	    <where>
	    	id = #{id} and <![CDATA[!(state & 1)]]>
	    	<if test="userId != null and userId != ''">
            	and user_id = #{userId}
            </if>  
	    </where>
	</update>
	<update id="Ad.updateByMap" parameterType="java.util.Map">
        update ad
        set updated_time = SYSDATE()
        <if test="(andState != null and andState != '') 
        	or (orState != null and orState != '')">
        	,state = state
       		<if test="andState != null and andState != ''">
       			<![CDATA[ & #{andState}]]>
       		</if>
       		<if test="orState != null and orState != '' ">
       			<![CDATA[ | #{orState}]]>
       		</if>
        </if>
        <if test="name != null">
            ,name = #{name}
        </if>
         <if test="prior != null">
            ,prior = #{prior}
        </if>
        <where>
            <if test="id != null and id != ''">
                and id = #{id}
            </if>
            <if test="userId != null and userId != ''">
            	and user_id = #{userId}
            </if>  
        </where>
    </update>
    <select id="Ad.findIds" resultType="java.lang.Integer" parameterType="java.lang.Integer">
        select id
        from ad
        <where>
			<!-- !(state & 1( means that not delete -->
        	<![CDATA[!(state & 1)]]>
	        <if test="userId != null and userId != ''">
	            and user_id = #{userId}
	        </if>
	        <if test="adOrderId != null and adOrderId != ''">
	            and ad_order_id = #{adOrderId}
	        </if>
       </where>     
    </select> 
    <delete id="Ad.delete" parameterType="java.util.Map">
		update ad 
			 set updated_time = SYSDATE()
			 <if test="id != null and id != ''">
			 	,ad_order_id = null
			 </if>
		<where>
			<!-- !(state & 1( means that not delete -->
        	 <![CDATA[!(state & 1)]]>
			 <if test="id != null and id != ''"> 
			 	and id = #{id}
			 </if>
		</where> 
	</delete>

</mapper>
