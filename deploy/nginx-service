#!/bin/sh 
UFP_LOG_DIR=/var/log/nginx
UFP_LOG_NAME=access_ufp_api_r.log
UFP_LOG_PATH=$UFP_LOG_DIR/$UFP_LOG_NAME

start_cronolog() {
	echo Init environment for cronolog: 

	if [ -f $UFP_LOG_PATH ]; then
		echo Logfile:$UFP_LOG_NAME exists. Now rename $UFP_LOG_NAME to $UFP_LOG_NAME.bak and make named pipe file
		mv $UFP_LOG_PATH $UFP_LOG_PATH.bak && mkfifo $UFP_LOG_PATH || exit 0
	elif [ -p $UFP_LOG_PATH ]; then
		echo Named pipe file exists 
	else
		echo Make named pipe file
		mkfifo $UFP_LOG_PATH || exit 0
	fi
	echo Enviroment for cronolog is ready.

	echo Starting cronolog:
	cronolog $UFP_LOG_PATH-%Y%m%d < $UFP_LOG_PATH &
	#tell nginx to reopen log
	echo Nginx reopen log file
	kill -USR1 `cat /var/run/nginx.pid`

	echo Cronolog start and nginx reopen the log file
}

stop_cronolog() {
	echo -n Stopping cronolog: 
	if [ -p $UFP_LOG_PATH ]; then
		rm $UFP_LOG_PATH
	fi
	echo "Cronolog has stopped"
}


case "$1" in
	start)
		stop_cronolog && service nginx $1 && start_cronolog
		;;
	stop)
		service nginx $1 && stop_cronolog 
		;;

	restart|force-reload|reload)
		stop_cronolog && service nginx $1 && start_cronolog
		;;

	configtest|testconfig|status)
		service nginx $1
		;;

	*)
		echo "Usage: {start|stop|restart|reload|force-reload|status|configtest}" >&2
		exit 1
		;;
esac

exit 0

